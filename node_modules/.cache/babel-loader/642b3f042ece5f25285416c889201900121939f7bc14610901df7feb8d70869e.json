{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"leaflet/dist/leaflet.css\";\nimport leaflet from 'leaflet';\nimport '@geoman-io/leaflet-geoman-free';\nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css';\nimport * as turf from '@turf/turf';\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      map: null,\n      polygon: null,\n      marker: null,\n      polygon2: null,\n      options: {\n        position: 'topleft',\n        // toolbar position, options are 'topleft', 'topright', 'bottomleft', 'bottomright'\n        drawMarker: true,\n        // adds button to draw markers\n        drawPolyline: true,\n        // adds button to draw a polyline\n        drawRectangle: true,\n        // adds button to draw a rectangle\n        drawPolygon: true,\n        // adds button to draw a polygon\n        drawCircle: true,\n        // adds button to draw a cricle\n        cutPolygon: true,\n        // adds button to cut a hole in a polygon\n        editMode: true,\n        // adds button to toggle edit mode for all layers\n        removalMode: true // adds a button to remove layers\n      },\n\n      geojsonFeature: {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n          \"type\": \"Feature\",\n          \"properties\": {},\n          \"geometry\": {\n            \"coordinates\": [51.509, -0.08],\n            \"type\": \"Point\"\n          }\n        }]\n      },\n      geoFeature: 0\n    };\n  },\n  methods: {\n    newGeo() {\n      var fg = leaflet.featureGroup();\n      this.map.eachLayer(layer => {\n        if (layer instanceof leaflet.Path || layer instanceof leaflet.Marker) {\n          fg.addLayer(layer);\n        }\n      });\n      console.log(fg.toGeoJSON());\n      return fg.toGeoJSON();\n    }\n  },\n  mounted() {\n    this.map = leaflet.map('map').setView([49.26047, 0], 15);\n    leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    }).addTo(this.map);\n    this.polygon = leaflet.polygon([[49.25578, 28.46221], [49.25724, 28.46273], [49.25742, 28.46215], [49.25884, 28.46237], [49.25893, 28.46130], [49.26026, 28.46135], [49.26047, 28.45471], [49.25916, 28.45445], [49.25903, 28.45517], [49.25837, 28.45510], [49.25821, 28.45663], [49.25791, 28.45665], [49.25769, 28.46030], [49.25685, 28.46009], [49.25646, 28.45980]]).addTo(this.map).bindPopup(\"P'yatnychanske cemetery\")\n    // .openPopup()\n    .setStyle({\n      color: 'black',\n      fillColor: 'black'\n    });\n\n    // this.marker = leaflet.marker().addTo(this.map);\n\n    this.map.pm.addControls(this.options);\n    this.polygon2 = leaflet.geoJSON(turf.flip(this.geojsonFeature)).addTo(this.map).bindPopup(\"P'yatnychanske cemetery\").openPopup();\n    // .setStyle({ color: '#000',fillColor: '#BADA55',fillOpacity: 0.5})\n  },\n\n  created() {\n    axios.get('Cemetery_Vinnytska.geojson').then(responce => {\n      this.geoFeature = responce.data.features[6].geometry.coordinates;\n      console.log(this.geoFeature);\n    }).catch(el => {\n      this.errors.push(el);\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["leaflet","turf","axios","name","components","data","map","polygon","marker","polygon2","options","position","drawMarker","drawPolyline","drawRectangle","drawPolygon","drawCircle","cutPolygon","editMode","removalMode","geojsonFeature","geoFeature","methods","newGeo","fg","featureGroup","eachLayer","layer","Path","Marker","addLayer","console","log","toGeoJSON","mounted","setView","tileLayer","maxZoom","attribution","addTo","bindPopup","setStyle","color","fillColor","pm","addControls","geoJSON","flip","openPopup","created","get","then","responce","features","geometry","coordinates","catch","el","errors","push"],"sourceRoot":"","sources":["/home/dima/r-i-p/src/App.vue"],"sourcesContent":["<template>\n   <div id=\"map\"></div>\n   {{ geoFeature }}\n</template>\n\n<script>\nimport \"leaflet/dist/leaflet.css\"\nimport leaflet from 'leaflet'\nimport '@geoman-io/leaflet-geoman-free';  \nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css'; \n import * as turf from '@turf/turf'\nimport axios from 'axios'\n\n\nexport default {\n  name: 'App',\n  components: {\n    \n  },\n  data() {\n    return {\n      map: null,\n      polygon: null,\n      marker: null,\n      polygon2: null,\n      options: {\n          position: 'topleft', // toolbar position, options are 'topleft', 'topright', 'bottomleft', 'bottomright'\n          drawMarker: true, // adds button to draw markers\n          drawPolyline: true, // adds button to draw a polyline\n          drawRectangle: true, // adds button to draw a rectangle\n          drawPolygon: true, // adds button to draw a polygon\n          drawCircle: true, // adds button to draw a cricle\n          cutPolygon: true, // adds button to cut a hole in a polygon\n          editMode: true, // adds button to toggle edit mode for all layers\n          removalMode: true, // adds a button to remove layers\n        },\n        geojsonFeature: {\n          \"type\": \"FeatureCollection\",\n          \"features\": [\n            {\n              \"type\": \"Feature\",\n              \"properties\": {},\n              \"geometry\": {\n                \"coordinates\": \n                  [51.509, -0.08]\n                  \n                ,\n                \"type\": \"Point\"\n              }\n            },\n          ]\n        },\n        geoFeature: 0,\n    }\n  },\n  methods: {\n      newGeo(){\n        var fg = leaflet.featureGroup();\n            this.map.eachLayer((layer)=>{\n              if(layer instanceof leaflet.Path || layer instanceof leaflet.Marker){\n                fg.addLayer(layer);\n              }\n              });\n               console.log(fg.toGeoJSON());\n              return fg.toGeoJSON()\n      }\n  },\n  mounted() {\n    this.map = leaflet.map('map').setView([49.26047,0], 15); \n    leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n}).addTo(this.map);\n    this.polygon = leaflet.polygon([\n    [49.25578,28.46221],\n    [49.25724,28.46273],\n    [49.25742,28.46215],\n    [49.25884,28.46237],\n    [49.25893,28.46130],\n    [49.26026,28.46135],\n    [49.26047,28.45471],\n    [49.25916,28.45445],\n    [49.25903,28.45517],\n    [49.25837,28.45510],\n    [49.25821,28.45663],\n    [49.25791,28.45665],\n    [49.25769,28.46030],\n    [49.25685,28.46009],\n    [49.25646,28.45980]\n]).addTo(this.map)\n  .bindPopup(\"P'yatnychanske cemetery\")\n  // .openPopup()\n  .setStyle({color:'black',fillColor: 'black',});\n\n  // this.marker = leaflet.marker().addTo(this.map);\n\n  this.map.pm.addControls(this.options);\n\n  this.polygon2 = leaflet.geoJSON(turf.flip(this.geojsonFeature)).addTo(this.map).bindPopup(\"P'yatnychanske cemetery\").openPopup()\n  // .setStyle({ color: '#000',fillColor: '#BADA55',fillOpacity: 0.5})\n  },\n  created() {\n        axios.get('Cemetery_Vinnytska.geojson')\n        .then(responce => {\n            this.geoFeature = responce.data.features[6].geometry.coordinates\n            console.log(this.geoFeature);\n        })\n        .catch(el => {\n            this.errors.push(el)\n        })\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n#map { height: 480px;}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}