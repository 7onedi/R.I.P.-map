{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.geojsonFeature), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACGA,oBAAoB;EAAfC,EAAE,EAAC;AAAK;;;6DAAbC,UAAoB,sBACpB,oBAAGC,oBAAc","names":["_createElementVNode","id","_hoisted_1","$data"],"sourceRoot":"","sources":["/home/dima/r-i-p/src/App.vue"],"sourcesContent":["<template>\n   <div id=\"map\"></div>\n   {{ geojsonFeature }}\n</template>\n\n<script>\nimport \"leaflet/dist/leaflet.css\"\nimport leaflet from 'leaflet'\nimport '@geoman-io/leaflet-geoman-free';  \nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css'; \n//  import * as turf from '@turf/turf'\nimport axios from 'axios'\n\n\nexport default {\n  name: 'App',\n  components: {\n    \n  },\n  data() {\n    return {\n      map: null,\n      polygon: null,\n      marker: null,\n      polygon2: null,\n      options: {\n          position: 'topleft', // toolbar position, options are 'topleft', 'topright', 'bottomleft', 'bottomright'\n          drawMarker: true, // adds button to draw markers\n          drawPolyline: true, // adds button to draw a polyline\n          drawRectangle: true, // adds button to draw a rectangle\n          drawPolygon: true, // adds button to draw a polygon\n          drawCircle: true, // adds button to draw a cricle\n          cutPolygon: true, // adds button to cut a hole in a polygon\n          editMode: true, // adds button to toggle edit mode for all layers\n          removalMode: true, // adds a button to remove layers\n        },\n        geojsonFeature: {\"type\": \"FeatureCollection\",\n\"name\": \"Cemetery_Vinnytska\",\n\"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n\"features\": [\n{ \"type\": \"Feature\", \"properties\": { \"Cemetery\": \"Міське кладовище\", \"codename\": \"місто\", \"City\": \"Вінниця\", \"COD_City\": \"UA05020030010063857\", \"ADMIN_1\": \"Вінницька\", \"ADMIN_2\": \"Вінницький\", \"type\": \"міська територіальна громада\", \"COD_adm_3\": \"UA05020030000031457\", \"ADMIN_3\": \"Вінницька\" }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ 28.498008922903921, 49.19424607111705 ] } },]\n          // \"type\": \"FeatureCollection\",\n          // \"features\": [\n          //   {\n          //     \"type\": \"Feature\",\n          //     \"properties\": {},\n          //     \"geometry\": {\n          //       \"coordinates\": \n          //         [51.509, -0.08],\n          //       \"type\": \"Point\"\n          //     }\n          //   },\n          // ]\n        },\n        geoFeature: 0,\n    }\n  },\n  methods: {\n      newGeo(){\n        var fg = leaflet.featureGroup();\n            this.map.eachLayer((layer)=>{\n              if(layer instanceof leaflet.Path || layer instanceof leaflet.Marker){\n                fg.addLayer(layer);\n              }\n              });\n               console.log(fg.toGeoJSON());\n              return fg.toGeoJSON()\n      }\n  },\n  mounted() {\n    this.map = leaflet.map('map').setView([49.25578,28.46221], 15); \n    leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n}).addTo(this.map);\n    this.polygon = leaflet.polygon([\n    [49.25578,28.46221],\n    [49.25724,28.46273],\n    [49.25742,28.46215],\n    [49.25884,28.46237],\n    [49.25893,28.46130],\n    [49.26026,28.46135],\n    [49.26047,28.45471],\n    [49.25916,28.45445],\n    [49.25903,28.45517],\n    [49.25837,28.45510],\n    [49.25821,28.45663],\n    [49.25791,28.45665],\n    [49.25769,28.46030],\n    [49.25685,28.46009],\n    [49.25646,28.45980]\n]).addTo(this.map)\n  .bindPopup(\"P'yatnychanske cemetery\")\n  // .openPopup()\n  .setStyle({color:'black',fillColor: 'black',});\n\n  // this.marker = leaflet.marker().addTo(this.map);\n\n  this.map.pm.addControls(this.options);\n\n  this.polygon2 = leaflet.geoJSON(this.geojsonFeature).addTo(this.map)\n  // .setStyle({ color: '#000',fillColor: '#BADA55',fillOpacity: 0.5})\n  },\n  created() {\n        axios.get('Cemetery_Vinnytska.geojson')\n        .then(responce => {\n            this.geojsonFeature = responce.data\n            console.log(this.geojsonFeature);\n            this.polygon2 = leaflet.geoJSON(this.geojsonFeature).addTo(this.map).bindPopup(this.geojsonFeature.features.properties.Cemetery)\n        })\n        .catch(el => {\n            this.errors.push(el)\n        })\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n#map { height: 480px;}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}