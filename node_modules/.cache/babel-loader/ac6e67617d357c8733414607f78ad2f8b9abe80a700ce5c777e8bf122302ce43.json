{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;EACQA,EAAE,EAAC;AAAK;;uBAAbC,oBAAoB,OAApBC,UAAoB","names":["id","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/home/dima/r-i-p/src/App.vue"],"sourcesContent":["<template>\n   <div id=\"map\"></div>\n</template>\n\n<script>\nimport \"leaflet/dist/leaflet.css\"\nimport leaflet from 'leaflet'\nimport '@geoman-io/leaflet-geoman-free';  \nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css'; \nimport * as turf from '@turf/turf' \n\nexport default {\n  name: 'App',\n  components: {\n    \n  },\n  data() {\n    return {\n      map: null,\n      polygon: null,\n      marker: null,\n      polygon2: null,\n      polygon3: null,\n      options: {\n          position: 'topleft', // toolbar position, options are 'topleft', 'topright', 'bottomleft', 'bottomright'\n          drawMarker: true, // adds button to draw markers\n          drawPolyline: true, // adds button to draw a polyline\n          drawRectangle: true, // adds button to draw a rectangle\n          drawPolygon: true, // adds button to draw a polygon\n          drawCircle: true, // adds button to draw a cricle\n          cutPolygon: true, // adds button to cut a hole in a polygon\n          editMode: true, // adds button to toggle edit mode for all layers\n          removalMode: true, // adds a button to remove layers\n        },\n        geojsonFeature: {\n          \"type\": \"FeatureCollection\",\n          \"features\": [\n            {\n              \"type\": \"Feature\",\n              \"properties\": {},\n              \"geometry\": {\n                \"coordinates\": [\n                  [\n                  [51.509, -0.08],\n                  [51.503, -0.06],\n                  [51.51, -0.047]\n                  ]\n                ],\n                \"type\": \"Polygon\"\n              }\n            },\n          ]\n        }\n    }\n  },\n  methods: {\n      newGeo(){\n        var fg = Leaflet.featureGroup();\n            this.map.eachLayer((layer)=>{\n              if(layer instanceof Leaflet.Path || layer instanceof Leaflet.Marker){\n                fg.addLayer(layer);\n              }\n              });\n               console.log(fg.toGeoJSON());\n              return fg.toGeoJSON()\n      }\n  },\n  mounted() {\n    this.map = leaflet.map('map').setView([49.2575,28.4588], 15); \n    leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n}).addTo(this.map);\n    this.polygon = leaflet.polygon([\n    [49.25578,28.46221],\n    [49.25724,28.46273],\n    [49.25742,28.46215],\n    [49.25884,28.46237],\n    [49.25893,28.46130],\n    [49.26026,28.46135],\n    [49.26047,28.45471],\n    [49.25916,28.45445],\n    [49.25903,28.45517],\n    [49.25837,28.45510],\n    [49.25821,28.45663],\n    [49.25791,28.45665],\n    [49.25769,28.46030],\n    [49.25685,28.46009],\n    [49.25646,28.45980]\n]).addTo(this.map)\n  .bindPopup(\"P'yatnychanske cemetery\")\n  .openPopup()\n  .setStyle({color:'black',fillColor: 'black',});\n\n  this.map.pm.addControls(this.options);\n\n  this.polygon2 = Leaflet.geoJSON(turf.flip(this.geojsonFeature)).addTo(this.map).setStyle({ color: '#000',fillColor: '#BADA55',fillOpacity: 0.5})\n\n  this.polygon3 =  Leaflet.geoJSON(turf.flip(this.newGeo())).addTo(this.map).setStyle({ color: '#000',fillColor: '#BADA55',fillOpacity: 0.5})\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n#map { height: 480px;}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}